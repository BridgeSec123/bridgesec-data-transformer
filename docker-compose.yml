
services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bridgesec_django
    working_dir: /app/bridgesec_data_transformer
    env_file:
      - .env
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - ./output:/app/output
      - static_volume:/app/static
    command: >
       gunicorn bridgesec_data_transformer.wsgi:application --bind 0.0.0.0:8000 --workers 4 --access-logfile -
    restart: always

  celery_worker:
    build: .
    container_name: bridgesec_celery
    working_dir: /app/bridgesec_data_transformer
    env_file:
      - .env
    environment:
      - CELERY_LOG_FILE=/app/logs/app.log
    depends_on:
      - web
    volumes:
     - ./bridgesec_data_transformer/logs:/app/logs
     - ./bridgesec_data_transformer/output:/app/bridgesec_data_transformer/output
    command: /bin/sh -c 'celery -A bridgesec_data_transformer worker --loglevel=INFO 2>&1 | tee -a /app/logs/app.log'
    restart: always

  consumer:
    build: .
    env_file:
      - .env
    container_name: bridgesec_consumer
    working_dir: /app/bridgesec_data_transformer
    command: python core/rabbitmq_consumer.py
    restart: always
    depends_on:
      - web
    volumes:
      - .:/app
  
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/app/static
    depends_on:
      - web

volumes:
  static_volume:
  mongo_data:   
 
